// Mocks generated by Mockito 5.3.0 from annotations
// in address_module/test/controller/address_form_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:address_module/address_module.dart' as _i3;
import 'package:address_module/application/address_service.dart' as _i5;
import 'package:address_module/domain/entity/address.dart' as _i7;
import 'package:address_module/domain/entity/suggestion.dart' as _i4;
import 'package:address_module/infrastructure/repository/address_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAddressRepository_0 extends _i1.SmartFake
    implements _i2.AddressRepository {
  _FakeAddressRepository_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAddressDependency_1 extends _i1.SmartFake
    implements _i3.AddressDependency {
  _FakeAddressDependency_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeSuggestionEntity_2 extends _i1.SmartFake
    implements _i4.SuggestionEntity {
  _FakeSuggestionEntity_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [AddressService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddressService extends _i1.Mock implements _i5.AddressService {
  MockAddressService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AddressRepository get addressRepository =>
      (super.noSuchMethod(Invocation.getter(#addressRepository),
              returnValue: _FakeAddressRepository_0(
                  this, Invocation.getter(#addressRepository)))
          as _i2.AddressRepository);
  @override
  _i3.AddressDependency get dependency => (super.noSuchMethod(
          Invocation.getter(#dependency),
          returnValue:
              _FakeAddressDependency_1(this, Invocation.getter(#dependency)))
      as _i3.AddressDependency);
  @override
  _i6.Future<_i7.AddressEntity?> getAddressFromPostcode() =>
      (super.noSuchMethod(Invocation.method(#getAddressFromPostcode, []),
              returnValue: _i6.Future<_i7.AddressEntity?>.value())
          as _i6.Future<_i7.AddressEntity?>);
  @override
  _i6.Future<List<_i3.CountryEntity>> getCountries() => (super.noSuchMethod(
          Invocation.method(#getCountries, []),
          returnValue:
              _i6.Future<List<_i3.CountryEntity>>.value(<_i3.CountryEntity>[]))
      as _i6.Future<List<_i3.CountryEntity>>);
  @override
  _i6.Future<_i7.AddressEntity?> getUserDefaultAddress() =>
      (super.noSuchMethod(Invocation.method(#getUserDefaultAddress, []),
              returnValue: _i6.Future<_i7.AddressEntity?>.value())
          as _i6.Future<_i7.AddressEntity?>);
  @override
  _i6.Future<List<_i4.SuggestionEntity>> searchForAddress(
          String? pattern, _i3.CountryEntity? country) =>
      (super.noSuchMethod(
              Invocation.method(#searchForAddress, [pattern, country]),
              returnValue: _i6.Future<List<_i4.SuggestionEntity>>.value(
                  <_i4.SuggestionEntity>[]))
          as _i6.Future<List<_i4.SuggestionEntity>>);
  @override
  _i6.Future<bool> addUserAddress(_i7.AddressEntity? addressEntity) =>
      (super.noSuchMethod(Invocation.method(#addUserAddress, [addressEntity]),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  bool isLoggedIn() => (super.noSuchMethod(Invocation.method(#isLoggedIn, []),
      returnValue: false) as bool);
  @override
  void onLogin() => super.noSuchMethod(Invocation.method(#onLogin, []),
      returnValueForMissingStub: null);
  @override
  _i6.Future<_i4.SuggestionEntity> getSuggestionDetails(
          _i4.SuggestionEntity? value) =>
      (super.noSuchMethod(Invocation.method(#getSuggestionDetails, [value]),
              returnValue: _i6.Future<_i4.SuggestionEntity>.value(
                  _FakeSuggestionEntity_2(
                      this, Invocation.method(#getSuggestionDetails, [value]))))
          as _i6.Future<_i4.SuggestionEntity>);
}
